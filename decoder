import chisel3._
import chisel3.util._

/**
  * 2-4 独热解码器模板
  * 功能：将 2 位二进制输入解码为 4 位独热编码输出
  */
class Decoder2to4 extends Module {
  // 定义输入输出端口
  val io = IO(new Bundle {
    val sel = Input(UInt(2.W))  // 2 位选择信号
    val result = Output(UInt(4.W))  // 4 位独热编码输出
  })

  // 定义常量以提高可读性
  val hot_one   = 1.U(4.W)
  val hot_two   = 2.U(4.W)
  val hot_three = 4.U(4.W)
  val hot_four  = 8.U(4.W)

  // 使用 switch 语句实现解码逻辑
  switch(io.sel) {
    is(0.U) { io.result := hot_one }    // 输入 00，输出 0001
    is(1.U) { io.result := hot_two }    // 输入 01，输出 0010
    is(2.U) { io.result := hot_three }  // 输入 10，输出 0100
    is(3.U) { io.result := hot_four }   // 输入 11，输出 1000
    default { io.result := 0.U }        // 默认情况，输出 0000
  }
}

// 生成 Verilog 代码
object Decoder2to4 extends App {
  (new chisel3.stage.ChiselStage).emitVerilog(new Decoder2to4)
}
